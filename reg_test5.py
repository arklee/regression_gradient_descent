from regression import problem

# 目标函数，th为特征值集合，x为自变量集合
def h(th, x):
    return th[2] / (th[0] + th[1] ** (-x[0]))

# 输入矩阵，input[i][j]表示第i+1个训练集的第j+1个自变量
input = [[-4.827934889830207], [-0.8833873127538983], [2.2840659045542955], [4.607267167304588], [3.1834767774866544], [-0.4763541864447085], [4.655881190827515], [3.765132705703004], [1.7094164677559354], [3.4178072710868346], [-3.2276417842224303], [-4.874762239283089], [-2.6884657848906635], [-3.590927752215034], [-0.37375812798407515], [4.817911380496778], [-4.2680783417361665], [-4.200836153679858], [-2.1700058649147125], [-1.1234502475527708], [-2.0833957749869603], [0.04151692495874881], [-4.916461742524381], [-2.7968818884207227], [3.756191054525023], [-0.09452086812334781], [1.2050346153948688], [-4.674581246809485], [1.9983184068531168], [0.10514218963093791], [-4.2941792873860605], [3.7438058348190872], [-3.66898226567221], [4.351503544673884], [3.3562437397946043], [0.5081579784336898], [-0.7339044526125316], [4.440843615619071], [2.4175907108119055], [4.713460410340192]]

# 输出向量
output = [0.027004068050124782, 0.3086485159253196, 0.9082079941493073, 0.988099127451485, 0.9804461126581574, 0.36029711230906036, 1.006373173269804, 0.97546836230047, 0.8625681582463433, 0.978236810260665, 0.01845845723616941, 0.0023710600363535464, 0.06944662689324459, 0.045713850617582916, 0.4046829798732818, 0.9942639891430377, 0.007705073595310247, 0.021095292928483025, 0.0960153900067381, 0.2382645564964426, 0.10317603845183486, 0.5061112884056671, 0.01805059862048225, 0.07084625130538037, 0.9995547837414154, 0.49311945902591825, 0.7643681296971685, 0.020050617264949125, 0.8967783017797972, 0.5185738951505762, -0.011134280140554117, 0.9555034639968477, 0.03064512182456971, 0.9828560981642276, 0.9590383665347941, 0.6360624072244924, 0.329003105453495, 0.9992217391042588, 0.9401608735416231, 1.0098635702003878]

# problem(输入矩阵, 输出向量, 目标函数, 迭代次数, 特征值个数)
p = problem(input, output, h, 1000, 3)

# p.plotSets()
p.solve()
p.show()
p.plot()